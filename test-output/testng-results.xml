<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="12" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-26T12:50:56 GST" name="VistaAutomatotionTestSuite" finished-at="2024-05-26T12:52:27 GST" duration-ms="91144">
    <groups>
      <group name="Registeration Functionality">
        <method signature="VistaRegisterationTestScenarioClass.RegisterationFunctionality_PositiveScenario_RegisterationScenario1()[pri:1, instance:tests.VistaRegisterationTestScenarioClass@23f5b5dc]" name="RegisterationFunctionality_PositiveScenario_RegisterationScenario1" class="tests.VistaRegisterationTestScenarioClass"/>
        <method signature="VistaRegisterationTestScenarioClass.RegisterationFunctionality__NegativeScenaio_RegisterationScenario2()[pri:2, instance:tests.VistaRegisterationTestScenarioClass@23f5b5dc]" name="RegisterationFunctionality__NegativeScenaio_RegisterationScenario2" class="tests.VistaRegisterationTestScenarioClass"/>
        <method signature="VistaRegisterationTestScenarioClass.RegisterationFunctionality__NegativeScenaio_RegisterationScenario3()[pri:3, instance:tests.VistaRegisterationTestScenarioClass@23f5b5dc]" name="RegisterationFunctionality__NegativeScenaio_RegisterationScenario3" class="tests.VistaRegisterationTestScenarioClass"/>
        <method signature="VistaRegisterationTestScenarioClass.RegisterationFunctionality__NegativeScenaio_RegisterationScenario4()[pri:4, instance:tests.VistaRegisterationTestScenarioClass@23f5b5dc]" name="RegisterationFunctionality__NegativeScenaio_RegisterationScenario4" class="tests.VistaRegisterationTestScenarioClass"/>
        <method signature="VistaRegisterationTestScenarioClass.RegisterationFunctionality__NegativeScenaio_RegisterationScenario5()[pri:5, instance:tests.VistaRegisterationTestScenarioClass@23f5b5dc]" name="RegisterationFunctionality__NegativeScenaio_RegisterationScenario5" class="tests.VistaRegisterationTestScenarioClass"/>
      </group> <!-- Registeration Functionality -->
      <group name="Login Functionality">
        <method signature="VistaLogInLogOutTestScenarioClass.LoginFunctionality_NegativeScenario_LoginScenario2()[pri:2, instance:tests.VistaLogInLogOutTestScenarioClass@1a4927d6]" name="LoginFunctionality_NegativeScenario_LoginScenario2" class="tests.VistaLogInLogOutTestScenarioClass"/>
        <method signature="VistaLogInLogOutTestScenarioClass.LoginFunctionality_PositiveScenario_LoginScenario1()[pri:1, instance:tests.VistaLogInLogOutTestScenarioClass@1a4927d6]" name="LoginFunctionality_PositiveScenario_LoginScenario1" class="tests.VistaLogInLogOutTestScenarioClass"/>
        <method signature="VistaLogInLogOutTestScenarioClass.LoginFunctionality_PositiveScenario_LoginScenario3()[pri:3, instance:tests.VistaLogInLogOutTestScenarioClass@1a4927d6]" name="LoginFunctionality_PositiveScenario_LoginScenario3" class="tests.VistaLogInLogOutTestScenarioClass"/>
      </group> <!-- Login Functionality -->
    </groups>
    <test started-at="2024-05-26T12:50:56 GST" name="Test" finished-at="2024-05-26T12:52:27 GST" duration-ms="91144">
      <class name="tests.VistaRegisterationTestScenarioClass">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.VistaRegisterationTestScenarioClass@23f5b5dc]" started-at="2024-05-26T12:51:31 GST" name="beforeMethod" finished-at="2024-05-26T12:51:36 GST" duration-ms="5790" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="RegisterationFunctionality_PositiveScenario_RegisterationScenario1()[pri:1, instance:tests.VistaRegisterationTestScenarioClass@23f5b5dc]" started-at="2024-05-26T12:51:36 GST" name="RegisterationFunctionality_PositiveScenario_RegisterationScenario1" finished-at="2024-05-26T12:51:43 GST" duration-ms="6321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterationFunctionality_PositiveScenario_RegisterationScenario1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.VistaRegisterationTestScenarioClass@23f5b5dc]" started-at="2024-05-26T12:51:43 GST" name="afterMethod" finished-at="2024-05-26T12:51:44 GST" duration-ms="1308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.VistaRegisterationTestScenarioClass@23f5b5dc]" started-at="2024-05-26T12:51:44 GST" name="beforeMethod" finished-at="2024-05-26T12:51:51 GST" duration-ms="6532" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="RegisterationFunctionality__NegativeScenaio_RegisterationScenario2()[pri:2, instance:tests.VistaRegisterationTestScenarioClass@23f5b5dc]" started-at="2024-05-26T12:51:51 GST" name="RegisterationFunctionality__NegativeScenaio_RegisterationScenario2" finished-at="2024-05-26T12:51:54 GST" duration-ms="3155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterationFunctionality__NegativeScenaio_RegisterationScenario2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.VistaRegisterationTestScenarioClass@23f5b5dc]" started-at="2024-05-26T12:51:54 GST" name="afterMethod" finished-at="2024-05-26T12:51:55 GST" duration-ms="1365" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.VistaRegisterationTestScenarioClass@23f5b5dc]" started-at="2024-05-26T12:51:55 GST" name="beforeMethod" finished-at="2024-05-26T12:52:01 GST" duration-ms="5717" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="RegisterationFunctionality__NegativeScenaio_RegisterationScenario3()[pri:3, instance:tests.VistaRegisterationTestScenarioClass@23f5b5dc]" started-at="2024-05-26T12:52:01 GST" name="RegisterationFunctionality__NegativeScenaio_RegisterationScenario3" finished-at="2024-05-26T12:52:05 GST" duration-ms="4440" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterationFunctionality__NegativeScenaio_RegisterationScenario3 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.VistaRegisterationTestScenarioClass@23f5b5dc]" started-at="2024-05-26T12:52:05 GST" name="afterMethod" finished-at="2024-05-26T12:52:07 GST" duration-ms="1365" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.VistaRegisterationTestScenarioClass@23f5b5dc]" started-at="2024-05-26T12:52:07 GST" name="beforeMethod" finished-at="2024-05-26T12:52:12 GST" duration-ms="5768" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="RegisterationFunctionality__NegativeScenaio_RegisterationScenario4()[pri:4, instance:tests.VistaRegisterationTestScenarioClass@23f5b5dc]" started-at="2024-05-26T12:52:12 GST" name="RegisterationFunctionality__NegativeScenaio_RegisterationScenario4" finished-at="2024-05-26T12:52:16 GST" duration-ms="3165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterationFunctionality__NegativeScenaio_RegisterationScenario4 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.VistaRegisterationTestScenarioClass@23f5b5dc]" started-at="2024-05-26T12:52:16 GST" name="afterMethod" finished-at="2024-05-26T12:52:17 GST" duration-ms="1365" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.VistaRegisterationTestScenarioClass@23f5b5dc]" started-at="2024-05-26T12:52:17 GST" name="beforeMethod" finished-at="2024-05-26T12:52:23 GST" duration-ms="6057" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="RegisterationFunctionality__NegativeScenaio_RegisterationScenario5()[pri:5, instance:tests.VistaRegisterationTestScenarioClass@23f5b5dc]" started-at="2024-05-26T12:52:23 GST" name="RegisterationFunctionality__NegativeScenaio_RegisterationScenario5" finished-at="2024-05-26T12:52:26 GST" duration-ms="3080" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterationFunctionality__NegativeScenaio_RegisterationScenario5 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.VistaRegisterationTestScenarioClass@23f5b5dc]" started-at="2024-05-26T12:52:26 GST" name="afterMethod" finished-at="2024-05-26T12:52:27 GST" duration-ms="1377" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- tests.VistaRegisterationTestScenarioClass -->
      <class name="tests.VistaLogInLogOutTestScenarioClass">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:tests.VistaLogInLogOutTestScenarioClass@1a4927d6]" started-at="2024-05-26T12:50:56 GST" name="beforeSuite" finished-at="2024-05-26T12:50:56 GST" duration-ms="186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.VistaLogInLogOutTestScenarioClass@1a4927d6]" started-at="2024-05-26T12:50:56 GST" name="beforeTest" finished-at="2024-05-26T12:50:56 GST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.VistaLogInLogOutTestScenarioClass@1a4927d6]" started-at="2024-05-26T12:50:56 GST" name="beforeMethod" finished-at="2024-05-26T12:51:03 GST" duration-ms="6797" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginFunctionality_PositiveScenario_LoginScenario1()[pri:1, instance:tests.VistaLogInLogOutTestScenarioClass@1a4927d6]" started-at="2024-05-26T12:51:03 GST" name="LoginFunctionality_PositiveScenario_LoginScenario1" finished-at="2024-05-26T12:51:08 GST" duration-ms="5349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginFunctionality_PositiveScenario_LoginScenario1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.VistaLogInLogOutTestScenarioClass@1a4927d6]" started-at="2024-05-26T12:51:08 GST" name="afterMethod" finished-at="2024-05-26T12:51:10 GST" duration-ms="1315" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.VistaLogInLogOutTestScenarioClass@1a4927d6]" started-at="2024-05-26T12:51:10 GST" name="beforeMethod" finished-at="2024-05-26T12:51:16 GST" duration-ms="6407" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginFunctionality_NegativeScenario_LoginScenario2()[pri:2, instance:tests.VistaLogInLogOutTestScenarioClass@1a4927d6]" started-at="2024-05-26T12:51:16 GST" name="LoginFunctionality_NegativeScenario_LoginScenario2" finished-at="2024-05-26T12:51:18 GST" duration-ms="2076" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginFunctionality_NegativeScenario_LoginScenario2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.VistaLogInLogOutTestScenarioClass@1a4927d6]" started-at="2024-05-26T12:51:18 GST" name="afterMethod" finished-at="2024-05-26T12:51:20 GST" duration-ms="1333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.VistaLogInLogOutTestScenarioClass@1a4927d6]" started-at="2024-05-26T12:51:20 GST" name="beforeMethod" finished-at="2024-05-26T12:51:25 GST" duration-ms="5793" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginFunctionality_PositiveScenario_LoginScenario3()[pri:3, instance:tests.VistaLogInLogOutTestScenarioClass@1a4927d6]" started-at="2024-05-26T12:51:25 GST" name="LoginFunctionality_PositiveScenario_LoginScenario3" finished-at="2024-05-26T12:51:31 GST" duration-ms="5223" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at utils.UIAutomationUtils.TakeScreenshot(UIAutomationUtils.java:158)
at tests.VistaLogInLogOutTestScenarioClass.LoginFunctionality_PositiveScenario_LoginScenario3(VistaLogInLogOutTestScenarioClass.java:68)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginFunctionality_PositiveScenario_LoginScenario3 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.VistaLogInLogOutTestScenarioClass@1a4927d6]" started-at="2024-05-26T12:51:31 GST" name="afterMethod" finished-at="2024-05-26T12:51:31 GST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:tests.VistaLogInLogOutTestScenarioClass@1a4927d6]" started-at="2024-05-26T12:52:27 GST" name="afterTest" finished-at="2024-05-26T12:52:27 GST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:tests.VistaLogInLogOutTestScenarioClass@1a4927d6]" started-at="2024-05-26T12:52:27 GST" name="afterSuite" finished-at="2024-05-26T12:52:28 GST" duration-ms="250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.VistaLogInLogOutTestScenarioClass -->
    </test> <!-- Test -->
  </suite> <!-- VistaAutomatotionTestSuite -->
</testng-results>
