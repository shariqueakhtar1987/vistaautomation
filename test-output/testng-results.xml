<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-26T09:48:22 GST" name="VistaAutomatotionTestSuite" finished-at="2024-05-26T09:49:30 GST" duration-ms="68071">
    <groups>
      <group name="Registeration Functionality">
        <method signature="VistaTestScenariosClass.RegisterationFunctionality_PositiveScenario_RegisterationScenario1()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" name="RegisterationFunctionality_PositiveScenario_RegisterationScenario1" class="tests.VistaTestScenariosClass"/>
        <method signature="VistaTestScenariosClass.RegisterationFunctionality__NegativeScenaio_RegisterationScenario2()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" name="RegisterationFunctionality__NegativeScenaio_RegisterationScenario2" class="tests.VistaTestScenariosClass"/>
        <method signature="VistaTestScenariosClass.RegisterationFunctionality__NegativeScenaio_RegisterationScenario3()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" name="RegisterationFunctionality__NegativeScenaio_RegisterationScenario3" class="tests.VistaTestScenariosClass"/>
        <method signature="VistaTestScenariosClass.RegisterationFunctionality__NegativeScenaio_RegisterationScenario4()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" name="RegisterationFunctionality__NegativeScenaio_RegisterationScenario4" class="tests.VistaTestScenariosClass"/>
        <method signature="VistaTestScenariosClass.RegisterationFunctionality__NegativeScenaio_RegisterationScenario5()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" name="RegisterationFunctionality__NegativeScenaio_RegisterationScenario5" class="tests.VistaTestScenariosClass"/>
      </group> <!-- Registeration Functionality -->
      <group name="Login Functionality">
        <method signature="VistaTestScenariosClass.LoginFunctionality_NegativeScenario_LoginScenario2()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" name="LoginFunctionality_NegativeScenario_LoginScenario2" class="tests.VistaTestScenariosClass"/>
        <method signature="VistaTestScenariosClass.LoginFunctionality_PositiveScenario_LoginScenario1()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" name="LoginFunctionality_PositiveScenario_LoginScenario1" class="tests.VistaTestScenariosClass"/>
        <method signature="VistaTestScenariosClass.LoginFunctionality_PositiveScenario_LoginScenario3()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" name="LoginFunctionality_PositiveScenario_LoginScenario3" class="tests.VistaTestScenariosClass"/>
      </group> <!-- Login Functionality -->
    </groups>
    <test started-at="2024-05-26T09:48:22 GST" name="Test" finished-at="2024-05-26T09:49:30 GST" duration-ms="68071">
      <class name="tests.VistaTestScenariosClass">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:48:21 GST" name="beforeSuite" finished-at="2024-05-26T09:48:21 GST" duration-ms="236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:48:22 GST" name="beforeTest" finished-at="2024-05-26T09:48:22 GST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:48:22 GST" name="beforeMethod" finished-at="2024-05-26T09:48:27 GST" duration-ms="5841" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginFunctionality_NegativeScenario_LoginScenario2()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:48:27 GST" name="LoginFunctionality_NegativeScenario_LoginScenario2" finished-at="2024-05-26T09:48:30 GST" duration-ms="2797" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginFunctionality_NegativeScenario_LoginScenario2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:48:30 GST" name="afterMethod" finished-at="2024-05-26T09:48:30 GST" duration-ms="268" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:48:30 GST" name="beforeMethod" finished-at="2024-05-26T09:48:35 GST" duration-ms="4953" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginFunctionality_PositiveScenario_LoginScenario1()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:48:35 GST" name="LoginFunctionality_PositiveScenario_LoginScenario1" finished-at="2024-05-26T09:48:38 GST" duration-ms="2676" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginFunctionality_PositiveScenario_LoginScenario1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:48:38 GST" name="afterMethod" finished-at="2024-05-26T09:48:38 GST" duration-ms="207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:48:38 GST" name="beforeMethod" finished-at="2024-05-26T09:48:43 GST" duration-ms="4493" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginFunctionality_PositiveScenario_LoginScenario3()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:48:43 GST" name="LoginFunctionality_PositiveScenario_LoginScenario3" finished-at="2024-05-26T09:48:47 GST" duration-ms="4250" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at utils.UIAutomationUtils.TakeScreenshot(UIAutomationUtils.java:148)
at tests.VistaTestScenariosClass.LoginFunctionality_PositiveScenario_LoginScenario3(VistaTestScenariosClass.java:52)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginFunctionality_PositiveScenario_LoginScenario3 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:48:47 GST" name="afterMethod" finished-at="2024-05-26T09:48:47 GST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:48:47 GST" name="beforeMethod" finished-at="2024-05-26T09:48:52 GST" duration-ms="5037" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="RegisterationFunctionality_PositiveScenario_RegisterationScenario1()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:48:52 GST" name="RegisterationFunctionality_PositiveScenario_RegisterationScenario1" finished-at="2024-05-26T09:48:56 GST" duration-ms="4412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterationFunctionality_PositiveScenario_RegisterationScenario1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:48:56 GST" name="afterMethod" finished-at="2024-05-26T09:48:57 GST" duration-ms="275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:48:57 GST" name="beforeMethod" finished-at="2024-05-26T09:49:01 GST" duration-ms="4608" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="RegisterationFunctionality__NegativeScenaio_RegisterationScenario2()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:49:01 GST" name="RegisterationFunctionality__NegativeScenaio_RegisterationScenario2" finished-at="2024-05-26T09:49:04 GST" duration-ms="2901" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterationFunctionality__NegativeScenaio_RegisterationScenario2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:49:04 GST" name="afterMethod" finished-at="2024-05-26T09:49:05 GST" duration-ms="283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:49:05 GST" name="beforeMethod" finished-at="2024-05-26T09:49:09 GST" duration-ms="4439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="RegisterationFunctionality__NegativeScenaio_RegisterationScenario3()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:49:09 GST" name="RegisterationFunctionality__NegativeScenaio_RegisterationScenario3" finished-at="2024-05-26T09:49:13 GST" duration-ms="4282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterationFunctionality__NegativeScenaio_RegisterationScenario3 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:49:13 GST" name="afterMethod" finished-at="2024-05-26T09:49:13 GST" duration-ms="227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:49:13 GST" name="beforeMethod" finished-at="2024-05-26T09:49:18 GST" duration-ms="4606" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="RegisterationFunctionality__NegativeScenaio_RegisterationScenario4()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:49:18 GST" name="RegisterationFunctionality__NegativeScenaio_RegisterationScenario4" finished-at="2024-05-26T09:49:21 GST" duration-ms="2974" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterationFunctionality__NegativeScenaio_RegisterationScenario4 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:49:21 GST" name="afterMethod" finished-at="2024-05-26T09:49:21 GST" duration-ms="245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:49:21 GST" name="beforeMethod" finished-at="2024-05-26T09:49:26 GST" duration-ms="4645" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="RegisterationFunctionality__NegativeScenaio_RegisterationScenario5()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:49:26 GST" name="RegisterationFunctionality__NegativeScenaio_RegisterationScenario5" finished-at="2024-05-26T09:49:29 GST" duration-ms="3350" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterationFunctionality__NegativeScenaio_RegisterationScenario5 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:49:29 GST" name="afterMethod" finished-at="2024-05-26T09:49:30 GST" duration-ms="253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:49:30 GST" name="afterTest" finished-at="2024-05-26T09:49:30 GST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:tests.VistaTestScenariosClass@7a6d7e92]" started-at="2024-05-26T09:49:30 GST" name="afterSuite" finished-at="2024-05-26T09:49:30 GST" duration-ms="314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.VistaTestScenariosClass -->
    </test> <!-- Test -->
  </suite> <!-- VistaAutomatotionTestSuite -->
</testng-results>
